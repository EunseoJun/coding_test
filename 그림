# 그림
# https://www.acmicpc.net/problem/1926
# 첫째 줄에는 그림의 개수, 둘째 줄에는 그 중 가장 넓은 그림의 길이

## 회고
# bfs 실버 정도는 가볍게 풀 수 있는거 같다. 
# 그래도 아직 조건을 누락하거나 하는 경우가 너무 많다. 
# 한 번에 확실히 구현할 수 있도록 하자

from collections import deque

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

n, m = map(int, input().split()) #그림 세로, 가로
picture = [list(map(int, input().split())) for _ in range(n)]

v = [[0]*m for _ in range(n)]
cntPicture = [0]


for i in range(n):
    for j in range(m):
        if picture[i][j] == 1 and v[i][j] == 0:
            picSize = 1
            q = deque()
            q.append((i, j))
            v[i][j] = 1
            while q:
                ci, cj = q.popleft()
                for dr in range(4):
                    ni, nj = ci + dx[dr], cj + dy[dr]
                    if 0<=ni<n and 0<=nj<m and v[ni][nj] == 0 and picture[ni][nj] == 1:
                        q.append((ni, nj))
                        v[ni][nj] = 1
                        picSize += 1
            cntPicture.append(picSize)

cntPicture.sort(reverse=True)
print(len(cntPicture)-1)
print(cntPicture[0])
