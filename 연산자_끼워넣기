# 연산자 끼워넣기
# https://www.acmicpc.net/problem/14888

# N개의 수로 이루어진 수열이 주어짐
# N-1개의 연산자가 주어짐
# 식의 계산은 앞부터, 나눗셈은 정수 나눗셈으로 몫만 취함
# 음수를 양수로 나눌 때는, 음수를 양수로 바꾼 뒤 몫을 취하고 음수로 바꾸기
# +, -, *, /의 개수가 주어짐

# 첫번째로 만들 수 있는 결과의 최댓값, 둘째 줄에는 최솟값

# 첫째 줄에는 수의 개수, 둘 째 줄에는 수열, 셋째 줄에는 연산자들
# 백트래킹으로 풀기


def dfs(n, sm, add, sub, mul, div):
    global mn, mx
    # [0] 결과값/중간 값의 범위: int(-1e8)~int(1e8)
    if sm < int(-1e9) or int(1e9)<sm:
        return

    # [1] 종료조건(정답처리)
    if n==N:
        mn = min(mn, sm)
        mx = max(mx, sm)
        return

    # [2] 하부호출: 연산자 개수 남았을 경우만 호출 가능
    if add>0:
        dfs(n+1, sm+lst[n], add-1, sub, mul, div)
    if sub>0:
        dfs(n+1, sm-lst[n], add, sub-1, mul, div)
    if mul>0:
        dfs(n+1, sm*lst[n], add, sub, mul-1, div)
    if div>0:
        dfs(n+1, int(sm/lst[n]), add, sub, mul, div-1)

N = int(input())
lst = list(map(int, input().split()))
add, sub, mul, div = map(int, input().split())

mn, mx = int(1e9), int(-1e9)
dfs(1, lst[0], add, sub, mul, div)
print(mx, mn, sep='\n')
