# 연구소
# https://www.acmicpc.net/problem/14502
# python으로 하면 시간초과, pypy로 제출, 다음엔 다른 방법으로 풀것.


from collections import deque

N, M = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(N)]

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

ans = 0

def bfs():
    # 원본 arr을 복사해서 사용
    temp = [row[:] for row in arr]
    q = deque()

    # 바이러스 위치 큐에 추가
    for i in range(N):
        for j in range(M):
            if temp[i][j] == 2:
                q.append((i, j))

    # 바이러스 퍼뜨리기
    while q:
        x, y = q.popleft()
        for d in range(4):
            nx = x + dx[d]
            ny = y + dy[d]
            if 0 <= nx < N and 0 <= ny < M and temp[nx][ny] == 0:
                temp[nx][ny] = 2
                q.append((nx, ny))

    # 안전 영역 개수 세기
    safe = sum(row.count(0) for row in temp)
    return safe

def make_wall(cnt):
    global ans
    if cnt == 3:
        ans = max(ans, bfs())
        return

    for i in range(N):
        for j in range(M):
            if arr[i][j] == 0:
                arr[i][j] = 1
                make_wall(cnt + 1)
                arr[i][j] = 0

make_wall(0)
print(ans)
