# https://www.acmicpc.net/problem/1260
# DFS와 BFS, 1260번

from collections import deque

def bfs():
    visited = [0] * (N+1)
    result = []
    q = deque()
    q.append(S)
    visited[S] = 1

    while q:
        node = q.popleft()
        result.append(node)
        for i in graph[node]:
            if visited[i] == 0:
                q.append(i)
                visited[i] = 1

    print(*result)


def dfs(S):
    visited[S] = 1
    result.append(S)
    for i in graph[S]:
        # print(i)
        if visited[i] == 0:
            dfs(i)


N, M, S = map(int, input().split())

graph = [[] for _ in range(N+1)]

for _ in range(M):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)

for i in range(len(graph)):
    graph[i].sort()

# print(graph)

result = []
visited = [0]*(N+1)
dfs(S)
print(*result)
bfs()

